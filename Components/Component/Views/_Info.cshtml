@using Components.Component.Extensions;
@using Components.Component.ViewModels;
@model ExampleViewModel

<form action="@Url.ActionLink("Demo", Model?.Components?[0].GetType().Name.Replace("ViewModel", string.Empty))" method="post" id="DemoForm">
    <h3 class="d-inline me-2">Demo</h3>
    <button type="submit" class="btn btn-success" style="margin-top: -10px;">
        <i class="fas fa-play"></i>
    </button>

    <br />
    <br />
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Property</th>
                <th scope="col">Type</th>
                <th scope="col">Values</th>
            </tr>
        </thead>
        <tbody>
            @{
                var properties = Html.GetSourceCode(Model?.Components?[0].GetType());
            }

            @if (properties is not null)
            {
                foreach (var property in properties)
                {
                    <tr>
                        <td><b>@property.Name</b></td>
                        <td><i>@property.PropertyType.Name</i></td>
                        <td>
                            @if (Html.IsType(property.PropertyType, typeof(string)))
                            {
                                <input name="@property.Name" type="text" class="form-control" id="exampleFormControlInput1" placeholder="Text">
                            }
                            else if (Html.IsType(property.PropertyType, typeof(int)))
                            {
                                <input name="@property.Name" type="number" class="form-control" id="exampleFormControlInput1" placeholder="Number">
                            }
                            else if (Html.IsType(property.PropertyType, typeof(decimal)))
                            {
                                <input name="@property.Name" type="number" class="form-control" id="exampleFormControlInput1" placeholder="Decimal">
                            }
                            else if (Html.IsType(property.PropertyType, typeof(DateTime)))
                            {
                                <input name="@property.Name" type="date" class="form-control" id="exampleFormControlInput1" placeholder="Date">
                            }
                            else if (Html.IsType(property.PropertyType, typeof(DateTimeOffset)))
                            {
                                <input name="@property.Name" type="date" class="form-control" id="exampleFormControlInput1" placeholder="Date">
                            }
                            else if (Html.IsType(property.PropertyType, typeof(TimeSpan)))
                            {
                                <input name="@property.Name" type="time" class="form-control" id="exampleFormControlInput1" placeholder="Time">
                            }
                            else if (Html.IsType(property.PropertyType, typeof(Guid)))
                            {
                                <input name="@property.Name" type="text" class="form-control" id="exampleFormControlInput1" placeholder="Guid">
                            }
                            else if (Html.IsType(property.PropertyType, typeof(byte)))
                            {
                                <input name="@property.Name" type="text" class="form-control" id="exampleFormControlInput1" placeholder="Byte">
                            }
                            else if (Html.IsType(property.PropertyType, typeof(bool)))
                            {
                                <div class="form-check">
                                    <input name="@property.Name" class="form-check-input" type="checkbox" value="true" id="flexCheckDefault">
                                    <label class="form-check-label" for="flexCheckDefault">
                                    </label>
                                </div>
                            }
                            else if (property.PropertyType != null && property.PropertyType.IsEnum)
                            {
                                <select name="@property" class="form-select" aria-label="Default select example">
                                    @{
                                        var values = Enum.GetValues(property.PropertyType);
                                    }

                                    @for (var i = 0; i < values.Length; i++)
                                    {
                                        <option value="@i">@values.GetValue(i)</option>
                                    }
                                </select>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <input name="ViewPath" type="hidden" class="form-control" id="exampleFormControlInput1" value="@Model?.ViewPath">
</form>

<br />
<br />

<h4>Code Snippet</h4>

<div class="bd-example-snippet bd-code-snippet">
    <div id="Demo-Placeholder"  class="bd-example m-0 border-0">
        
    </div>
    <div class="bd-example d-flex align-items-center highlight-toolbar ps-3 pe-2 py-1 border-0 border-top border-bottom">
        <small class="font-monospace text-body-secondary text-uppercase">HTML</small>
        <div class="d-flex ms-auto">
            <button type="button" class="btn btn-light mt-0 me-0" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard">
                <i class="fa-regular fa-copy"></i>
            </button>
        </div>
    </div>
    <pre class="bd-example border-0 p-3 m-0">
<code id="Demo-Code-Placeholder" class="language-html"></code>
    </pre>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("DemoForm").addEventListener("submit", function (e) {
            e.preventDefault();

            var xhr = new XMLHttpRequest();
            xhr.open("POST", document.getElementById("DemoForm").action);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        let doc = new DOMParser().parseFromString(xhr.responseText, "text/html");
                        document.getElementById("Demo-Placeholder").innerHTML = doc.documentElement.innerHTML;
                        
                        let elem = document.getElementById("Demo-Code-Placeholder");
                        let highlightedCode = Prism.highlight(xhr.responseText.trim(), Prism.languages["html"], "html");
                        elem.innerHTML = highlightedCode;

                    }
                }
            };
            var formData = new FormData(document.getElementById("DemoForm"));
            xhr.send(formData);
        });
    });
</script>